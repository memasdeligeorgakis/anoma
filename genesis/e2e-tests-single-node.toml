# Genesis configuration source for E2E tests with:
# - 1 genesis validator and intent # gossip nodes
# - a matchmaker configured on the first validator node
# - User accounts same as the ones in "dev" build (Albert, Bertha, Christel)

genesis_time = "2021-09-30T10:00:00Z"

[validator.validator-0]
# Validator's staked XAN at genesis.
tokens = 200000
# Amount of the validator's genesis token balance which is not staked.
non_staked_balance = 1000000000000
# VP for the validator account
validator_vp = "vp_user"
# VP for the staking reward account
staking_reward_vp = "vp_user"
# Public IP:port address.
# We set the port to be the default+1000, so that if a local node was running at 
# the same time as the E2E tests, it wouldn't affect them.
net_address = "127.0.0.1:27656"
# This has to be an alias of one of the established accounts
matchmaker_account = "matchmaker"
# A matchmaker dylib program's name (the platform specific extension 
# `(dll|dylib|so)` is added by Anoma)
matchmaker_code = "libmm_token_exch"
# A transaction WASM code used by the matchmaker
matchmaker_tx = "wasm/tx_from_intent.wasm"

# Some tokens present at genesis.

[token.XAN]
address = "atest1v4ehgw36x3prswzxggunzv6pxqmnvdj9xvcyzvpsggeyvs3cg9qnywf589qnwvfsg5erg3fkl09rg5"
vp = "vp_token"
[token.XAN.balances]
Albert = 1000000
"Albert.public_key" = 100
Bertha = 1000000
"Bertha.public_key" = 100
Christel = 1000000
"Christel.public_key" = 100
Daewon = 1000000
faucet = 9223372036854
"faucet.public_key" = 100
matchmaker = 1000000
"matchmaker.public_key" = 1000
"validator-0.public_key" = 100

[token.BTC]
address = "atest1v4ehgw36xdzryve5gsc52veeg5cnsv2yx5eygvp38qcrvd29xy6rys6p8yc5xvp4xfpy2v694wgwcp"
vp = "vp_token"
[token.BTC.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

[token.ETH]
address = "atest1v4ehgw36xqmr2d3nx3ryvd2xxgmrq33j8qcns33sxezrgv6zxdzrydjrxveygd2yxumrsdpsf9jc2p"
vp = "vp_token"
[token.ETH.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

[token.DOT]
address = "atest1v4ehgw36gg6nvs2zgfpyxsfjgc65yv6pxy6nwwfsxgungdzrggeyzv35gveyxsjyxymyz335hur2jn"
vp = "vp_token"
[token.Dot.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

[token.Schnitzel]
address = "atest1v4ehgw36xue5xvf5xvuyzvpjx5un2v3k8qeyvd3cxdqns32p89rrxd6xx9zngvpegccnzs699rdnnt"
vp = "vp_token"
[token.Schnitzel.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

[token.Apfel]
address = "atest1v4ehgw36gfryydj9g3p5zv3kg9znyd358ycnzsfcggc5gvecgc6ygs2rxv6ry3zpg4zrwdfeumqcz9"
vp = "vp_token"
[token.Apfel.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

[token.Kartoffel]
address = "atest1v4ehgw36gep5ysecxq6nyv3jg3zygv3e89qn2vp48pryxsf4xpznvve5gvmy23fs89pryvf5a6ht90"
public_key = ""
vp = "vp_token"
[token.Kartoffel.balances]
Albert = 1000000
Bertha = 1000000
Christel = 1000000
Daewon = 1000000
faucet = 9223372036854

# Some established accounts present at genesis.
[established.faucet]
vp = "vp_testnet_faucet"

[established.matchmaker]
vp = "vp_user"

[established.Albert]
vp = "vp_user"

[established.Bertha]
vp = "vp_user"

[established.Christel]
vp = "vp_user"

[implicit.Daewon]

# Wasm VP definitions

# Default user VP
[wasm.vp_user]
# filename (relative to wasm path used by the node)
filename = "vp_user.wasm"
# SHA-256 hash of the wasm file
sha256 = "dc7b97f0448f2369bd2401c3c1d8898f53cac8c464a8c1b1f7f81415a658625d"

# Token VP
[wasm.vp_token]
filename = "vp_token.wasm"
sha256 = "e428a11f570d21dd3c871f5d35de6fe18098eb8ee0456b3e11a72ccdd8685cd0"

# Faucet VP
[wasm.vp_testnet_faucet]
filename = "vp_testnet_faucet.wasm"
sha256 = "2038d93afd456a77c45123811b671627f488c8d2a72b714d82dd494cbbd552bc"

# General protocol parameters.
[parameters]
# Minimum number of blocks in an epoch.
min_num_of_blocks = 4
# Minimum duration of an epoch (in seconds).
min_duration = 1
# Maximum expected time per block (in seconds).
max_expected_time_per_block = 30
# vp whitelist
vp_whitelist = []
# tx whitelist
tx_whitelist = []

# Proof of stake parameters.
[pos_params]
# Maximum number of active validators.
max_validator_slots = 128
# Pipeline length (in epochs). Any change in the validator set made in
# epoch 'n' will become active in epoch 'n + pipeline_len'.
pipeline_len = 2
# Unbonding length (in epochs). Validators may have their stake slashed
# for a fault in epoch 'n' up through epoch 'n + unbonding_len'.
unbonding_len = 3
# Votes per token (in basis points, i.e., per 10,000 tokens)
votes_per_token = 10
# Reward for proposing a block.
block_proposer_reward = 100
# Reward for voting on a block.
block_vote_reward = 1
# Portion of a validator's stake that should be slashed on a duplicate
# vote (in basis points, i.e., 500 = 5%).
duplicate_vote_slash_rate = 500
# Portion of a validator's stake that should be slashed on a light
# client attack (in basis points, i.e., 500 = 5%).
light_client_attack_slash_rate = 500

# Governance parameters.
[gov_params]
# minimum amount of xan token to lock
min_proposal_fund = 500
# proposal code size in bytes
max_proposal_code_size = 300000
# proposal period length in epoch
min_proposal_period = 3
# maximum number of characters in the proposal content
max_proposal_content_size = 10000
# minimum epochs between end and grace epoch
min_proposal_grace_epochs = 6